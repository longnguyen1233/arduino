byte data[][5] = {
  
  B00000000, B00000000, B00000000, B00000000, B00000000, 
  
  B10000000, B00000000, B00000000, B00000000, B00000000, 
  B01000000, B00000000, B00000000, B00000000, B00000100, 
  B00100000, B00000000, B00000000, B00000000, B00001000,
  B00010000, B00000000, B00000000, B00000000, B00010000,
  B00001000, B00000000, B00000000, B00000000, B00100000,
  B00000100, B00000000, B00000000, B00000000, B01000000,
  B00000010, B00000000, B00000000, B00000000, B10000000,
  B00000001, B00000000, B00000000, B00000001, B00000000,
  B00000000, B10000000, B00000000, B00000010, B00000000,
  B00000000, B01000000, B00000000, B00000100, B00000000,
  B00000000, B00100000, B00000000, B00001000, B00000000,
  B00000000, B00010000, B00000000, B00010000, B00000000,
  B00000000, B00001000, B00000000, B00100000, B00000000,
  B00000000, B00000100, B00000000, B01000000, B00000000,
  B00000000, B00000010, B00000000, B10000000, B00000000,
  B00000000, B00000001, B00000001, B00000000, B00000000,
  B00000000, B00000000, B10000010, B00000000, B00000000,
  B00000000, B00000000, B01000100, B00000000, B00000000,
  B00000000, B00000000, B00101000, B00000000, B00000000,
  B00000000, B00000000, B00010000, B00000000, B00000000, // 1

  B00000000, B00000000, B00000000, B00000000, B00000000, 

  B00000000, B00000000, B00010000, B00000000, B00000000,
  B00000000, B00000000, B00111000, B00000000, B00000000,
  B00000000, B00000000, B01111100, B00000000, B00000000,
  B00000000, B00000000, B11111110, B00000000, B00000000,
  B00000000, B00000001, B11111111, B00000000, B00000000,
  B00000000, B00000011, B11111111, B10000000, B00000000,
  B00000000, B00000111, B11111111, B11000000, B00000000,
  B00000000, B00001111, B11111111, B11100000, B00000000,
  B00000000, B00011111, B11111111, B11110000, B00000000,
  B00000000, B00111111, B11111111, B11111000, B00000000,
  B00000000, B01111111, B11111111, B11111100, B00000000,
  B00000000, B11111111, B11111111, B11111110, B00000000,
  B00000001, B11111111, B11111111, B11111111, B00000000,
  B00000011, B11111111, B11111111, B11111111, B10000000,
  B00000111, B11111111, B11111111, B11111111, B11000000,
  B00001111, B11111111, B11111111, B11111111, B11100000,
  B00011111, B11111111, B11111111, B11111111, B11110000,
  B00111111, B11111111, B11111111, B11111111, B11111000,
  B01111111, B11111111, B11111111, B11111111, B11111100,
  B11111111, B11111111, B11111111, B11111111, B11111110,//2

  B01111111, B11111111, B11111111, B11111111, B11111111, 
  B00111111, B11111111, B11111111, B11111111, B11111000, 
  B00011111, B11111111, B11111111, B11111111, B11110000,
  B00001111, B11111111, B11111111, B11111111, B11100000,
  B00000111, B11111111, B11111111, B11111111, B11000000,
  B00000011, B11111111, B11111111, B11111111, B10000000,
  B00000001, B11111111, B11111111, B11111111, B00000000,
  B00000000, B11111111, B11111111, B11111110, B00000000,
  B00000000, B01111111, B11111111, B11111100, B00000000,
  B00000000, B00111111, B11111111, B11111000, B00000000,
  B00000000, B00011111, B11111111, B11110000, B00000000,
  B00000000, B00001111, B11111111, B11100000, B00000000,
  B00000000, B00000111, B11111111, B11000000, B00000000,
  B00000000, B00000011, B11111111, B10000000, B00000000,
  B00000000, B00000001, B11111111, B00000000, B00000000,
  B00000000, B00000000, B11111110, B00000000, B00000000,
  B00000000, B00000000, B01111100, B00000000, B00000000,
  B00000000, B00000000, B00111000, B00000000, B00000000,
  B00000000, B00000000, B00010000, B00000000, B00000000,
  B00000000, B00000000, B0000000, B00000000, B00000000,//3
 
  B11111111, B11111111, B11111111, B11111111, B11111111,
  B11111111, B11111111, B11101111, B11111111, B11111111,
  B11111111, B11111111, B11000111, B11111111, B11111111,
  B11111111, B11111111, B10000011, B11111111, B11111111,
  B11111111, B11111111, B00000001, B11111111, B11111111,
  B11111111, B11111110, B00000000, B11111111, B11111111,
  B11111111, B11111100, B00000000, B01111111, B11111111,
  B11111111, B11111000, B00000000, B00111111, B11111111,
  B11111111, B11110000, B00000000, B00011111, B11111111,
  B11111111, B11100000, B00000000, B00001111, B11111111,
  B11111111, B11000000, B00000000, B00000111, B11111111,
  B11111111, B10000000, B00000000, B00000011, B11111111,
  B11111111, B00000000, B00000000, B00000001, B11111111,
  B11111110, B00000000, B00000000, B00000000, B11111111,
  B11111100, B00000000, B00000000, B00000000, B01111111,
  B11111000, B00000000, B00000000, B00000000, B00111111,
  B11110000, B00000000, B00000000, B00000000, B00011111,
  B11100000, B00000000, B00000000, B00000000, B00001111,
  B11000000, B00000000, B00000000, B00000000, B00000111,
  B10000000, B00000000, B00000000, B00000000, B00000011,
  B00000000, B00000000, B00000000, B00000000, B00000001,//4





 



};
int dl = 10;
int xung =11;
int chot =12;

void doc_bit(int k)
{
  int i,j;
  byte b;
  digitalWrite(xung,0);
  digitalWrite(chot,0);
  for(i=4;i>=0; i--)
    for(j=0; j<=7; j++)
    {
      b = bitRead(data[k][i],j);
      digitalWrite(dl,b);
      digitalWrite(xung,1);
      delay(1);
      digitalWrite(xung,0);
    }
    digitalWrite(chot,1);
    delay(1);
digitalWrite(chot,0);
}
void setup(){
  pinMode(dl, OUTPUT);
  pinMode(xung, OUTPUT);
  pinMode(chot, OUTPUT);
}

void loop(){
  int k;
  for (k=0; k<=81; k++) {doc_bit(k); delay(100);}
}