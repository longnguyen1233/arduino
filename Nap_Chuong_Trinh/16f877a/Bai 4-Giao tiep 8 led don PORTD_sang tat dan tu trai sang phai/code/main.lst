CCS PCM C Compiler, Version 4.104, 5967               05-Jul-20 19:34

               Filename: D:\Z-Tai lieu giang day\05-Lap trinh PIC16F877A\Phan 1-PIC16F877A giao tiep voi led don\Bai 4-Giao tiep 8 led don PORTD_sang tat dan tu trai sang phai\code\main.lst

               ROM used: 89 words (1%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         9 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... /*==========================//================================================= 
....................   * Ten Tep      :        main.c 
....................   * Tac Gia      :        www.hocdientu123.vn 
....................   * Ngay         :        25-07-2019 
....................   * Tom Tat      :        Chuong trinh dieu khien Led don. 
.................... ==========================//=================================================*/ 
.................... #include "main.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES RESERVED              	//Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
.................... //=========================khai bao cac chan vao ra=========================// 
.................... //=========================khai bao cac bien va hang=========================// 
.................... unsigned int8 i=0;  
.................... unsigned int8 x; 
.................... //=========================khai bao cac ham==================================// 
.................... //=======================================ham main============================// 
.................... void main() 
.................... { 
0018:  CLRF   04
0019:  BCF    03.7
001A:  MOVLW  1F
001B:  ANDWF  03,F
001C:  CLRF   20
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
....................    //dinh nghia chan LED la chan Output; =0 là Output, =1 la Input 
....................    set_tris_d(0b00000000);// cho tat ca cac pin (chan) cua PORTD la ngo ra 
0024:  MOVLW  00
0025:  MOVWF  08
....................    output_d(0xFF);   //muc 1 tat het LED 
0026:  CLRF   08
0027:  MOVLW  FF
0028:  BCF    03.5
0029:  MOVWF  08
....................    x=0xFF; 
002A:  MOVWF  21
....................    while(TRUE)// vong lap vo tan 
....................    { 
....................     //==========SANG DAN TU LED1 DEN LED8====================// 
....................        for(i=0;i<8;i++) 
002B:  CLRF   20
002C:  MOVF   20,W
002D:  SUBLW  07
002E:  BTFSS  03.0
002F:  GOTO   040
....................          { 
....................            x=x<<1;            //dich trai 1 bit 0 
0030:  BCF    03.0
0031:  RLF    21,F
....................            output_d(x);      //gan gia tri x cho PORTD 
0032:  BSF    03.5
0033:  CLRF   08
0034:  BCF    03.5
0035:  MOVF   21,W
0036:  MOVWF  08
....................            delay_ms(300); 
0037:  MOVLW  02
0038:  MOVWF  22
0039:  MOVLW  96
003A:  MOVWF  23
003B:  CALL   004
003C:  DECFSZ 22,F
003D:  GOTO   039
....................          } 
003E:  INCF   20,F
003F:  GOTO   02C
....................    //==========TAT DAN TU LED1 DEN LED8====================// 
....................        for(i=0;i<8;i++) 
0040:  CLRF   20
0041:  MOVF   20,W
0042:  SUBLW  07
0043:  BTFSS  03.0
0044:  GOTO   057
....................          { 
....................            x=(x<<1)+1;           //dich trai va cong 1 de dich bit 1 vao 
0045:  BCF    03.0
0046:  RLF    21,W
0047:  ADDLW  01
0048:  MOVWF  21
....................            output_d(x);         //gan gia tri x cho PORT1 
0049:  BSF    03.5
004A:  CLRF   08
004B:  BCF    03.5
004C:  MOVF   21,W
004D:  MOVWF  08
....................            delay_ms(300); 
004E:  MOVLW  02
004F:  MOVWF  22
0050:  MOVLW  96
0051:  MOVWF  23
0052:  CALL   004
0053:  DECFSZ 22,F
0054:  GOTO   050
....................          }   
0055:  INCF   20,F
0056:  GOTO   041
....................    } 
0057:  GOTO   02B
....................  } 
....................  
....................  
....................  
0058:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
